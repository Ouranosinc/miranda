name: miranda Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - .cruft.json
      - CHANGELOG.rst
      - README.rst
      - pyproject.toml
      - tests/test_miranda.py
      - src/miranda/__init__.py
  pull_request:

concurrency:
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on master.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read

jobs:
  lint_and_docs:
    runs-on: ubuntu-latest
    name: ${{ matrix.tox-env }}
    strategy:
      matrix:
        tox-env:
          - lint
          - docs
        python-version:
          - "3.x"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Run lint and docs testing suite
        run: |
          python -m tox -e ${{ matrix.tox-env }}
        env:
          READTHEDOCS: 1

  test-pypi:
    name: Test with Python${{ matrix.python-version }} (tox, ${{ matrix.os }})
    needs: lint_and_docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ] # "3.13"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install GDAL
        if: "endsWith(matrix.tox-env, '-full')"
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .tox
          key: ${{ matrix.os }}-Python${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}
      - name: Test with tox
        run: |
          python -m tox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  test-conda:
    name: Test with Python${{ matrix.python-version }} (Anaconda, ${{ matrix.os }})
    needs: lint_and_docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@068f1ab4b37ed9b3d9f73da7db90a0cda0a48d29 # v2.0.3
        with:
          cache-downloads: true
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}
          micromamba-version: 1.5.10-0 # Pin micromamba version because of following issue: https://github.com/mamba-org/setup-micromamba/issues/225
      - name: Install miranda
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with pytest
        run: |
          python -m pytest --numprocesses=logical --durations=10 --cov=miranda --cov-report=lcov
      - name: Report Coverage
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          flag-name: run-Python${{ matrix.python-version }}-conda
          parallel: true

  finish:
    needs:
      - test-pypi
      - test-conda
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Coveralls Finished
        uses: coverallsapp/github-action@cfd0633edbd2411b532b808ba7a8b5e04f76d2c8 # v2.3.4
        with:
          parallel-finished: true
