name: miranda Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - .cruft.json
      - CHANGELOG.rst
      - README.rst
      - pyproject.toml
      - tests/test_miranda.py
      - src/miranda/__init__.py
  pull_request:

concurrency:
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on master.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read

env:
  MIRANDA_TESTDATA_BRANCH: v2025.5.16

jobs:
  lint_and_docs:
    runs-on: ubuntu-latest
    name: ${{ matrix.tox-env }}
    strategy:
      matrix:
        tox-env:
          - lint
          - docs
        python-version:
          - "3.x"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            .tox
          key: ${{ hashFiles('pyproject.toml', 'tox.ini') }}-${{ matrix.tox-env }}
      - name: Run lint and docs testing suite
        run: |
          python -m tox -e ${{ matrix.tox-env }}
        env:
          READTHEDOCS: 1

  test-pypi:
    name: Test with Python${{ matrix.python-version }} (tox, ${{ matrix.os }})
    needs: lint_and_docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install GDAL
        if: "endsWith(matrix.tox-env, '-full')"
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: .tox
          key: ${{ matrix.os }}-Python${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}
      - name: Test with tox
        run: |
          python -m tox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  test-conda:
    name: Test with Python${{ matrix.python-version }} (Anaconda, ${{ matrix.os }})
    needs: lint_and_docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@add3a49764cedee8ee24e82dfde87f5bc2914462 # v2.0.7
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}
      - name: Manual install of pyessv-archive
        run: |
          mkdir -p ~/.esdoc
          git clone https://github.com/ES-DOC/pyessv-archive.git ~/.esdoc/pyessv-archive
      - name: Install miranda
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with pytest
        run: |
          python -m pytest --durations=10 --cov=miranda --cov-report=lcov
      - name: Report Coverage
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          flag-name: run-Python${{ matrix.python-version }}-conda
          parallel: true

  finish:
    name: Finish
    needs:
      - test-pypi
      - test-conda
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Coveralls Finished
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          parallel-finished: true
